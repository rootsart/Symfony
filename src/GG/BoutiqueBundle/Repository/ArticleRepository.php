<?php

namespace GG\BoutiqueBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository{
	public function myFindAll(){
	    $queryBuilder = $this->createQueryBuilder('a');

	    // On récupère la Query à partir du QueryBuilder
	    $query = $queryBuilder->getQuery();

	    // On récupère les résultats à partir de la Query
	    $results = $query->getResult();
	    return $results;

  	}

  	public function findByCategorie($categorie){
		$qb = $this->createQueryBuilder('a');
		$qb
			->where('a.categorie = :categorie')
			->setParameter('categorie', $categorie)
		;
	    
		return $qb
		    ->getQuery()
		    ->getResult()
	  ;

	}

	public function findByReference($reference){
		$qb = $this->createQueryBuilder('a');
		$qb
			->where('a.reference = :reference')
			->setParameter('reference', $reference)
		;
	    
		return $qb
		    ->getQuery()
		    ->getResult()
	  ;

	}




	//ADMINBOUTIQUE Permet d'afficher la liste des categories dans le formulaire de modification articles
	public function find_rubrique_categorie($list){

		return $this
			->createQueryBuilder('o')
			->select('o')
			->add('groupBy', 'o.' . $list)
			
		;
	}





  	public function findByRubrique($rubrique){
		$qb = $this->createQueryBuilder('a');
		$qb
			->where('a.rubrique = :rubrique')
			->setParameter('rubrique', $rubrique)
		;
	    
		return $qb
		    ->getQuery()
		    ->getResult()
	  ;

  	}


  	public function myFindOne($id){
	  $qb = $this->createQueryBuilder('a');
	  $qb
		->leftJoin('a.photo', 'img')
		->addSelect('img')
		->where('a.id = :id')
	    ->setParameter('id', $id)
	  ;


	  return $qb
	    ->getQuery()
	    ->getResult()
	  ;

	}
}
