# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    mon_user_registration:
        class: GG\UserBundle\Form\RegistrationType
        arguments: [fos_user.model.user.class]
        tags:
            - { name: form.type, alias: app_user_registration }


    mon_change_password:
        class: GG\UserBundle\Form\ChangePasswordFormType
        arguments: [fos_user.model.user.class]
        tags:
            - { name: form.type, alias: app_user_change_password }

    hidden_datetime.form.type:
        class: GG\UserBundle\Form\HiddenDateTimeType
        tags:
            - { name: form.type, alias: hidden_datetime }


    mon_success_handler:
        class: GG\UserBundle\Form\Handler\AuthenticationHandler
        arguments:
                - "@router"


    credit_card_type:
        class: GG\PaiementBundle\Form\CreditCardType
        tags:
            - { name: form.type, alias: credit_card }
            - { name: payment.method_form_type }

    #payment.plugin.paypal:
        #class: GG\PaiementBundle\Plugin\CreditCardPlugin
        #tags: [{name: payment.plugin}]

    monMenu_builder:
        class: GG\BoutiqueBundle\Menu\MenuBuilder
        arguments: ["@knp_menu.factory"]

    monMenu_main_menu:
       class: Knp\Menu\MenuItem
       factory: ["@monMenu_builder", createMainMenu]
       arguments: ["@request_stack"]
       tags:
           - { name: knp_menu.menu, alias: main }




